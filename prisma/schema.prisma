// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  ADMIN
  USER
}
model User {
    id            String    @id @default(cuid())
    name          String
    email         String?   @unique
    crypted_password String?
    role          Role
    image         String?
}
enum NodeStatus {
    offline
    idle
    allocated
    full
}

model Node {
    name      String @id
    ipAddress String @unique
    cpu       Int
    memory    Int
    status    NodeStatus
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    jobs      Job[]
}
enum JobStatus {
    created
    queued
    running
    finished
    failed
}
enum ResourceStatus {
    creating
    running
    uploading
    finished
    failed
}

model Job {
    id        Int         @id @default(autoincrement())
    toolId    Int
    Tool      Tool @relation(fields: [toolId],references: [id])
    name      String
    command   String[]
    cpu       Int
    memory    Int
    status    JobStatus
    nodeName  String?
    node      Node?       @relation(fields: [nodeName], references: [name])
    exitCode  Int         @default(0)
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    startedAt DateTime?
    finishedAt DateTime?
    inputs JobInput[]
    outputs JobOutput[]
}

model JobOutput {
    jobId      Int
    name       String
    job        Job      @relation(fields: [jobId], references: [id])
    resourceId Int
    resource   Resource @relation(fields: [resourceId], references: [id])

    @@id([jobId, resourceId])
}
model Tool {
    id        Int         @id @default(autoincrement())
    name      String
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    template  Json
    jobs    Job[]
}

model JobInput {
    jobId      Int
    name       String
    job        Job      @relation(fields: [jobId], references: [id])
    resourceId Int
    resource   Resource @relation(fields: [resourceId], references: [id])

    @@id([jobId, resourceId])
}

model Resource {
    id        Int            @id @default(autoincrement())
    name      String
    type      String
    path      String?
    size      Int?
    status    ResourceStatus
    createdAt DateTime       @default(now())
    updatedAt DateTime       @updatedAt
    JobOutput JobOutput[]
    JobInputs JobInput[]
}
